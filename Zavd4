import java.util.Random;
import java.util.Scanner;

public class NeoSon {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Введіть кількість рядків матриці: ");
        int rows = scanner.nextInt();
        System.out.print("Введіть кількість стовпців матриці: ");
        int cols = scanner.nextInt();

        if (rows < 2 || cols < 2) {
            System.out.println("Матриця повинна бути розміром не менше 2x2 для обчислення мінору.");
            return;
        }

        int[][] matrix = new int[rows][cols];
        Random random = new Random();

        System.out.println("Згенерована матриця:");
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                matrix[i][j] = random.nextInt(10); 
                System.out.print(matrix[i][j] + "\t");
            }
            System.out.println();
        }

        System.out.print("Введіть номер рядка для мінору (1-" + rows + "): ");
        int rowToRemove = scanner.nextInt() - 1;
        System.out.print("Введіть номер стовпця для мінору (1-" + cols + "): ");
        int colToRemove = scanner.nextInt() - 1;

        if (rowToRemove < 0 || rowToRemove >= rows || colToRemove < 0 || colToRemove >= cols) {
            System.out.println("Неправильні індекси.");
            return;
        }

        int[][] minorMatrix = getMinor(matrix, rowToRemove, colToRemove);

        System.out.println("Мінорна матриця:");
        for (int i = 0; i < minorMatrix.length; i++) {
            for (int j = 0; j < minorMatrix[i].length; j++) {
                System.out.print(minorMatrix[i][j] + "\t");
            }
            System.out.println();
        }
    }

    public static int[][] getMinor(int[][] matrix, int rowToRemove, int colToRemove) {
        int rows = matrix.length;
        int cols = matrix[0].length;
        int[][] minor = new int[rows - 1][cols - 1];

        int minorRow = 0, minorCol;
        for (int i = 0; i < rows; i++) {
            if (i == rowToRemove) continue; 

            minorCol = 0;
            for (int j = 0; j < cols; j++) {
                if (j == colToRemove) continue;

                minor[minorRow][minorCol++] = matrix[i][j];
            }
            minorRow++;
        }
        return minor;
    }
}
